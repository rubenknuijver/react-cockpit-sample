import React, { ForwardRefRenderFunction } from "react";
import clsx from "clsx";
import {
  withStyles,
  Theme,
  makeStyles,
  createStyles
} from "@material-ui/core/styles";

export const styles = makeStyles((theme: Theme) =>
  createStyles({
    /* Styles applied to the root element. */
    root: {
      userSelect: "none",
      width: "1em",
      height: "1em",
      display: "inline-block",
      fill: "currentColor",
      flexShrink: 0,
      fontSize: theme.typography.pxToRem(24),
      transition: theme.transitions.create("fill", {
        duration: theme.transitions.duration.shorter
      })
    },
    /* Styles applied to the root element if `color="primary"`. */
    colorPrimary: {
      color: theme.palette.primary.main
    },
    /* Styles applied to the root element if `color="secondary"`. */
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    /* Styles applied to the root element if `color="action"`. */
    colorAction: {
      color: theme.palette.action.active
    },
    /* Styles applied to the root element if `color="error"`. */
    colorError: {
      color: theme.palette.error.main
    },
    /* Styles applied to the root element if `color="disabled"`. */
    colorDisabled: {
      color: theme.palette.action.disabled
    },
    /* Styles applied to the root element if `fontSize="inherit"`. */
    fontSizeInherit: {
      fontSize: "inherit"
    },
    /* Styles applied to the root element if `fontSize="small"`. */
    fontSizeSmall: {
      fontSize: theme.typography.pxToRem(20)
    },
    /* Styles applied to the root element if `fontSize="large"`. */
    fontSizeLarge: {
      fontSize: theme.typography.pxToRem(35)
    }
  })
);

// type IconProps = {
//   width?: string;
//   height?: string;
//   fill?: string;
// };

// const defaultIconProps: IconProps = {
//   width: "24px",
//   height: "24px",
//   fill: "#666666"
// };

// const WhiteHeartIcon: React.SFC<IconProps> = props => {
//   const { width, height, fill } = props; //{ ...defaultIconProps, ...props };
//   return (
//     <svg
//       version="1.1"
//       id="Layer_1"
//       x="0px"
//       y="0px"
//       className="white-heart-icon"
//       width={width}
//       height={height}
//       viewBox="336.782 295.102 24 24"
//       enableBackground="new 336.782 295.102 24 24"
//     >
//       <g>
//         <path
//           className="cls-1"
//           fill={fill}
//           d="M357.506,305.589c-1.299,0-2.498,0.699-3.146,1.848c-0.648-1.149-1.847-1.848-3.146-1.848
//      c-2.746,0-4.144,3.196-2.646,5.344l0.05,0.049l3.896,4.294c-0.051,0.05-0.101,0.1-0.15,0.2c-0.949,0.949-2.197,1.448-3.545,1.448
//      c-2.796,0-5.043-2.247-5.043-5.043v-4.444c3.295-0.25,5.942-3.046,5.942-6.392v-3.695c0-0.3-0.2-0.5-0.499-0.5l0,0l0,0h-1.548
//      v-0.249c0-0.3-0.2-0.5-0.499-0.5h-1.049c-0.499,0-0.899,0.4-0.899,0.899v0.6c0,0.499,0.4,0.899,0.899,0.899h1.049
//      c0.299,0,0.499-0.2,0.499-0.5v-0.15h1.049v3.246c0,2.997-2.448,5.444-5.443,5.444c-3.045,0-5.493-2.447-5.493-5.444v-3.246h1.448
//      v0.2c0,0.3,0.2,0.5,0.5,0.5h1.048c0.5,0,0.899-0.399,0.899-0.899v-0.599c0-0.499-0.399-0.899-0.899-0.899h-1.048
//      c-0.3,0-0.5,0.2-0.5,0.5v0.2h-1.948l0,0l0,0c-0.3,0-0.5,0.2-0.5,0.5v3.745c0,3.396,2.597,6.143,5.942,6.393v4.443
//      c0,3.296,2.697,6.042,6.042,6.042c1.598,0,3.096-0.648,4.245-1.747c0.049-0.05,0.098-0.1,0.149-0.15l0.55,0.599
//      c0.149,0.2,0.399,0.3,0.648,0.3c0.25,0,0.5-0.1,0.648-0.3l5.145-5.642l0.05-0.05C361.651,308.786,360.253,305.589,357.506,305.589z
//       M346.62,297.351C346.62,297.351,346.57,297.351,346.62,297.351C346.57,297.351,346.62,297.351,346.62,297.351v0.2h-0.449v-0.45
//      h0.449V297.351z M340.229,297.101h0.449v0.45h-0.449V297.101z M359.353,310.383l-4.993,5.542l-0.599-0.649
//      c0.4-0.599,0.699-1.298,0.849-2.047c1.048-0.15,1.849-1.049,1.849-2.147c0-1.198-1-2.198-2.198-2.198c-1.199,0-2.197,1-2.197,2.198
//      c0,0.949,0.648,1.797,1.548,2.047c-0.1,0.45-0.3,0.898-0.55,1.348l-3.745-4.145c-0.998-1.497-0.099-3.794,1.848-3.794
//      c0.999,0,1.897,0.549,2.348,1.497c0.15,0.3,0.45,0.5,0.799,0.5s0.648-0.2,0.799-0.5c0.449-0.898,1.35-1.497,2.397-1.497
//      C359.454,306.588,360.353,308.836,359.353,310.383z M353.061,311.083c0-0.649,0.55-1.198,1.199-1.198s1.198,0.549,1.198,1.198
//      c0,0.648-0.549,1.199-1.198,1.199S353.061,311.731,353.061,311.083z"
//         />
//       </g>
//     </svg>
//   );
// };

// WhiteHeartIcon.defaultProps = defaultIconProps;

// const WebhooksIcon: React.SFC<IconProps> = props => (
//   <svg
//     width={props.width}
//     height={props.height}
//     viewBox="0 0 50 50"
//     version="1.1"
//   >
//     <g>
//       <path
//         fill={props.fill}
//         d="M25 4c-5.512 0-10 4.488-10 10 0 3.29 1.633 6.176 4.094 8l-4.938 8.156c-.039-.011-.082-.02-.125-.031a3.976 3.976 0 0 0-3.031.406A4.013 4.013 0 0 0 9.531 36 4 4 0 0 0 13 38c.68 0 1.371-.168 2-.531a4.014 4.014 0 0 0 1.875-2.438A3.96 3.96 0 0 0 16.469 32c-.168-.29-.399-.547-.625-.781l5.437-8.938.532-.875-.875-.5A8.011 8.011 0 0 1 17 14c0-4.43 3.57-8 8-8s8 3.57 8 8c0 .824-.113 1.598-.344 2.344l1.907.593c.289-.933.437-1.914.437-2.937 0-5.512-4.488-10-10-10zm0 6c-2.207 0-4 1.793-4 4s1.793 4 4 4c.332 0 .66-.047.969-.125l4.812 8.719.469.875.906-.469A7.888 7.888 0 0 1 36 26c4.43 0 8 3.57 8 8s-3.57 8-8 8a8.007 8.007 0 0 1-5.563-2.25l-1.375 1.438A9.998 9.998 0 0 0 36 44c5.512 0 10-4.488 10-10s-4.488-10-10-10c-1.387 0-2.672.363-3.875.875l-4.406-7.969A3.964 3.964 0 0 0 29 14c0-2.207-1.793-4-4-4zM10.562 24.281C6.207 25.367 3 29.324 3 34c0 5.512 4.488 10 10 10 5.156 0 9.285-3.98 9.813-9h9.343c.446 1.723 1.985 3 3.844 3 2.207 0 4-1.793 4-4s-1.793-4-4-4c-1.86 0-3.398 1.277-3.844 3H21v1c0 4.43-3.57 8-8 8s-8-3.57-8-8c0-3.758 2.586-6.883 6.063-7.75z"
//         id="surface1"
//       />
//     </g>
//   </svg>
// );

// WebhooksIcon.defaultProps = defaultIconProps;

// const WhiteGearIcon: React.SFC<IconProps> = props => (
//   <svg width={props.width} height={props.height} viewBox="0 0 1792 1792">
//     <path
//       d="M1152 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zm512-109v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z"
//       fill={props.fill}
//     />
//   </svg>
// );

// WhiteGearIcon.defaultProps = defaultIconProps;

const TasIcon = (props: any, ref: any) => {
  const {
    children,
    classes = styles,
    className,
    color = "inherit",
    component: Component = "svg",
    fontSize = "default",
    titleAccess,
    viewBox = "0 0 1792 1792",
    ...other
  } = props;

  const capitalize = (string: string) =>
    string.charAt(0).toUpperCase() + string.slice(1);

  return (
    <Component
      className={clsx(
        classes.root,
        {
          [classes[`color${capitalize(color)}`]]: color !== "inherit",
          [classes[`fontSize${capitalize(fontSize)}`]]: fontSize !== "default"
        },
        className
      )}
      viewBox={viewBox}
      focusable="false"
      role={titleAccess ? "img" : undefined}
      {...other}
    >
      {children}
    </Component>
  );
};

const GearIcon = React.forwardRef((props: any, ref: any) => {
  const classes = styles(props);
  return (
    <TasIcon ref={ref} classes={classes} viewBox="0 0 1792 1792" {...props}>
      <path d="M1152 896q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zm512-109v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z" />
    </TasIcon>
  );
});

const HeartIcon = React.forwardRef((props: any, ref: any) => {
  const classes = styles(props);
  return (
    <TasIcon
      ref={ref}
      classes={classes}
      viewBox="336.782 295.102 24 24"
      enableBackground="new 336.782 295.102 24 24"
      {...props}
    >
      <g>
        <path
          className="cls-1"
          d="M357.506,305.589c-1.299,0-2.498,0.699-3.146,1.848c-0.648-1.149-1.847-1.848-3.146-1.848
     c-2.746,0-4.144,3.196-2.646,5.344l0.05,0.049l3.896,4.294c-0.051,0.05-0.101,0.1-0.15,0.2c-0.949,0.949-2.197,1.448-3.545,1.448
     c-2.796,0-5.043-2.247-5.043-5.043v-4.444c3.295-0.25,5.942-3.046,5.942-6.392v-3.695c0-0.3-0.2-0.5-0.499-0.5l0,0l0,0h-1.548
     v-0.249c0-0.3-0.2-0.5-0.499-0.5h-1.049c-0.499,0-0.899,0.4-0.899,0.899v0.6c0,0.499,0.4,0.899,0.899,0.899h1.049
     c0.299,0,0.499-0.2,0.499-0.5v-0.15h1.049v3.246c0,2.997-2.448,5.444-5.443,5.444c-3.045,0-5.493-2.447-5.493-5.444v-3.246h1.448
     v0.2c0,0.3,0.2,0.5,0.5,0.5h1.048c0.5,0,0.899-0.399,0.899-0.899v-0.599c0-0.499-0.399-0.899-0.899-0.899h-1.048
     c-0.3,0-0.5,0.2-0.5,0.5v0.2h-1.948l0,0l0,0c-0.3,0-0.5,0.2-0.5,0.5v3.745c0,3.396,2.597,6.143,5.942,6.393v4.443
     c0,3.296,2.697,6.042,6.042,6.042c1.598,0,3.096-0.648,4.245-1.747c0.049-0.05,0.098-0.1,0.149-0.15l0.55,0.599
     c0.149,0.2,0.399,0.3,0.648,0.3c0.25,0,0.5-0.1,0.648-0.3l5.145-5.642l0.05-0.05C361.651,308.786,360.253,305.589,357.506,305.589z
      M346.62,297.351C346.62,297.351,346.57,297.351,346.62,297.351C346.57,297.351,346.62,297.351,346.62,297.351v0.2h-0.449v-0.45
     h0.449V297.351z M340.229,297.101h0.449v0.45h-0.449V297.101z M359.353,310.383l-4.993,5.542l-0.599-0.649
     c0.4-0.599,0.699-1.298,0.849-2.047c1.048-0.15,1.849-1.049,1.849-2.147c0-1.198-1-2.198-2.198-2.198c-1.199,0-2.197,1-2.197,2.198
     c0,0.949,0.648,1.797,1.548,2.047c-0.1,0.45-0.3,0.898-0.55,1.348l-3.745-4.145c-0.998-1.497-0.099-3.794,1.848-3.794
     c0.999,0,1.897,0.549,2.348,1.497c0.15,0.3,0.45,0.5,0.799,0.5s0.648-0.2,0.799-0.5c0.449-0.898,1.35-1.497,2.397-1.497
     C359.454,306.588,360.353,308.836,359.353,310.383z M353.061,311.083c0-0.649,0.55-1.198,1.199-1.198s1.198,0.549,1.198,1.198
     c0,0.648-0.549,1.199-1.198,1.199S353.061,311.731,353.061,311.083z"
        />
      </g>
    </TasIcon>
  );
});

const WebhooksIcon = React.forwardRef((props: any, ref: any) => {
  const classes = styles(props);
  return (
    <TasIcon ref={ref} classes={classes} viewBox="0 0 50 50" {...props}>
      <g>
        <path
          d="M25 4c-5.512 0-10 4.488-10 10 0 3.29 1.633 6.176 4.094 8l-4.938 8.156c-.039-.011-.082-.02-.125-.031a3.976 3.976 0 0 0-3.031.406A4.013 4.013 0 0 0 9.531 36 4 4 0 0 0 13 38c.68 0 1.371-.168 2-.531a4.014 4.014 0 0 0 1.875-2.438A3.96 3.96 0 0 0 16.469 32c-.168-.29-.399-.547-.625-.781l5.437-8.938.532-.875-.875-.5A8.011 8.011 0 0 1 17 14c0-4.43 3.57-8 8-8s8 3.57 8 8c0 .824-.113 1.598-.344 2.344l1.907.593c.289-.933.437-1.914.437-2.937 0-5.512-4.488-10-10-10zm0 6c-2.207 0-4 1.793-4 4s1.793 4 4 4c.332 0 .66-.047.969-.125l4.812 8.719.469.875.906-.469A7.888 7.888 0 0 1 36 26c4.43 0 8 3.57 8 8s-3.57 8-8 8a8.007 8.007 0 0 1-5.563-2.25l-1.375 1.438A9.998 9.998 0 0 0 36 44c5.512 0 10-4.488 10-10s-4.488-10-10-10c-1.387 0-2.672.363-3.875.875l-4.406-7.969A3.964 3.964 0 0 0 29 14c0-2.207-1.793-4-4-4zM10.562 24.281C6.207 25.367 3 29.324 3 34c0 5.512 4.488 10 10 10 5.156 0 9.285-3.98 9.813-9h9.343c.446 1.723 1.985 3 3.844 3 2.207 0 4-1.793 4-4s-1.793-4-4-4c-1.86 0-3.398 1.277-3.844 3H21v1c0 4.43-3.57 8-8 8s-8-3.57-8-8c0-3.758 2.586-6.883 6.063-7.75z"
          id="surface1"
        />
      </g>
    </TasIcon>
  );
});

export { HeartIcon, WebhooksIcon, GearIcon };
